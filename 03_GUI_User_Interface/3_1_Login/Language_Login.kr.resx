<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lb.form" xml:space="preserve">
    <value>직원 정보 관리</value>
  </data>
  <data name="lb.Name" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="lb.Pass" xml:space="preserve">
    <value>비밀번호</value>
  </data>
  <data name="lb.Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="btn.Add" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="btn.AddDept" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="btn.Save" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="btn.Del" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="btn.Modify" xml:space="preserve">
    <value>고치</value>
  </data>
  <data name="gr.ManageListUser" xml:space="preserve">
    <value>직원 관리 목록</value>
  </data>
  <data name="gr.ManageDept" xml:space="preserve">
    <value>부서 관리 목록</value>
  </data>
  <data name="lb.Dept" xml:space="preserve">
    <value>부서</value>
  </data>
  <data name="lb.Pos" xml:space="preserve">
    <value>직위</value>
  </data>
  <data name="lb.Rol" xml:space="preserve">
    <value>구조</value>
  </data>
  <data name="lb.DeptName" xml:space="preserve">
    <value>부서의 이름</value>
  </data>
  <data name="t1" xml:space="preserve">
    <value>사용자 수가 한도에 도달했으며 더 이상 추가 할 수 없습니다.</value>
  </data>
  <data name="t2" xml:space="preserve">
    <value>데이터를 추가 하시겠습니까?</value>
  </data>
  <data name="t7" xml:space="preserve">
    <value>공고</value>
  </data>
  <data name="t11" xml:space="preserve">
    <value>새로운 모드에 있습니다.</value>
  </data>
  <data name="t10" xml:space="preserve">
    <value>데이터가없고 확인해야합니다</value>
  </data>
  <data name="t9" xml:space="preserve">
    <value>입력 데이터를 다시 확인하십시오.</value>
  </data>
  <data name="t8" xml:space="preserve">
    <value>새로운 사용자를 성공적으로 추가했습니다</value>
  </data>
  <data name="t6" xml:space="preserve">
    <value>부서 :</value>
  </data>
  <data name="t5" xml:space="preserve">
    <value>위치 :</value>
  </data>
  <data name="t4" xml:space="preserve">
    <value>역할 :</value>
  </data>
  <data name="t3" xml:space="preserve">
    <value>이름 :</value>
  </data>
  <data name="t12" xml:space="preserve">
    <value>아직 입력되지 않았습니다</value>
  </data>
  <data name="t17" xml:space="preserve">
    <value>데이터를 수정 하시겠습니까?</value>
  </data>
  <data name="t23" xml:space="preserve">
    <value>모드 : 새 부서 추가</value>
  </data>
  <data name="t28" xml:space="preserve">
    <value>부서를 성공적으로 삭제합니다.</value>
  </data>
  <data name="t27" xml:space="preserve">
    <value>삭제 --- </value>
  </data>
  <data name="t26" xml:space="preserve">
    <value>새로운 방 이름이 없습니다</value>
  </data>
  <data name="t25" xml:space="preserve">
    <value>오류가 발생했습니다</value>
  </data>
  <data name="t24" xml:space="preserve">
    <value>부서 수정 성공 :</value>
  </data>
  <data name="t22" xml:space="preserve">
    <value>오류가 발생했습니다</value>
  </data>
  <data name="t21" xml:space="preserve">
    <value>성공적으로 사용자를 삭제합니다.</value>
  </data>
  <data name="t20" xml:space="preserve">
    <value>삭제 ----</value>
  </data>
  <data name="t19" xml:space="preserve">
    <value>데이터가 없습니다</value>
  </data>
  <data name="t18" xml:space="preserve">
    <value>새 사용자를 성공적으로 수정했습니다</value>
  </data>
  <data name="t16" xml:space="preserve">
    <value>오류, 입력 정보를 확인하십시오</value>
  </data>
  <data name="t15" xml:space="preserve">
    <value>성공적인 부서가 추가되었습니다</value>
  </data>
  <data name="t14" xml:space="preserve">
    <value>부서을 추가합니다 :</value>
  </data>
  <data name="t13" xml:space="preserve">
    <value>새로운 부서 이름이 없습니다</value>
  </data>
  <data name="t29" xml:space="preserve">
    <value>오류가 발생했습니다</value>
  </data>
</root>