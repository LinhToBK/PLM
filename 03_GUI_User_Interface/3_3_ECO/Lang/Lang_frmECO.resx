<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="i.form" xml:space="preserve">
    <value>Engineering Change Order ( ECO )</value>
  </data>
  <data name="lb1" xml:space="preserve">
    <value>Note : 
1. Update information of Part
2. Update relation of Parts
3. Delete relation of Parts</value>
  </data>
  <data name="lb10" xml:space="preserve">
    <value>Update Part</value>
  </data>
  <data name="lb11" xml:space="preserve">
    <value>Parent infor</value>
  </data>
  <data name="lb12" xml:space="preserve">
    <value>Child infor</value>
  </data>
  <data name="lb13" xml:space="preserve">
    <value>Show List Child</value>
  </data>
  <data name="lb14" xml:space="preserve">
    <value>Modify quantity</value>
  </data>
  <data name="lb15" xml:space="preserve">
    <value>Delete relation</value>
  </data>
  <data name="lb16" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="lb17" xml:space="preserve">
    <value>ECO Relation: 
1. If you  delete relation, you must create new relation.
2. Change quantity of child in parent part</value>
  </data>
  <data name="lb18" xml:space="preserve">
    <value>Add &amp;Parent</value>
  </data>
  <data name="lb19" xml:space="preserve">
    <value>Add &amp;Child</value>
  </data>
  <data name="lb2" xml:space="preserve">
    <value>Short key :
+) Alt + T =&gt; Add Part to update information 
+) Alt + P =&gt; Add Parent to update relation
+) Alt + C =&gt; Add Child to update relation
+) Alt + L =&gt; Check List Child
</value>
  </data>
  <data name="lb3" xml:space="preserve">
    <value>Keysearch</value>
  </data>
  <data name="lb4" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="lb5" xml:space="preserve">
    <value>Add Part</value>
  </data>
  <data name="lb6" xml:space="preserve">
    <value>Create relation request</value>
  </data>
  <data name="lb7" xml:space="preserve">
    <value>Find Part</value>
  </data>
  <data name="lb8" xml:space="preserve">
    <value>Update information  of Part</value>
  </data>
  <data name="lb9" xml:space="preserve">
    <value>(Version, Material, Drawing, ...)</value>
  </data>
  <data name="t0" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="t1" xml:space="preserve">
    <value>Can not load data of quantity</value>
  </data>
  <data name="t10" xml:space="preserve">
    <value>Make the [Delete Relation] request successfully.</value>
  </data>
  <data name="t11" xml:space="preserve">
    <value>Error . Please check data and connection again</value>
  </data>
  <data name="t12" xml:space="preserve">
    <value>You need to choose the part to update information</value>
  </data>
  <data name="t13" xml:space="preserve">
    <value />
  </data>
  <data name="t2" xml:space="preserve">
    <value>You need to enter the keysearch</value>
  </data>
  <data name="t3" xml:space="preserve">
    <value>Do you want to exit "Make ECO Request" tab ?</value>
  </data>
  <data name="t4" xml:space="preserve">
    <value>Not have data in Search List</value>
  </data>
  <data name="t5" xml:space="preserve">
    <value>Not have Parent Part Data</value>
  </data>
  <data name="t6" xml:space="preserve">
    <value>Value of quantity is wrong</value>
  </data>
  <data name="t7" xml:space="preserve">
    <value>old quantity = new quantity</value>
  </data>
  <data name="t8" xml:space="preserve">
    <value>Do you want to delete relation : </value>
  </data>
  <data name="t9" xml:space="preserve">
    <value>If you  delete relation, you must create new relation.</value>
  </data>
</root>