<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="i.form" xml:space="preserve">
    <value>Engineering Change Order ( ECO )</value>
  </data>
  <data name="lb1" xml:space="preserve">
    <value>메모 : 
1. 부품의 업데이트
2. 부품의 관계 업데이트
3. 부품의 관계를 삭제합니다</value>
  </data>
  <data name="lb10" xml:space="preserve">
    <value>Update Part</value>
  </data>
  <data name="lb11" xml:space="preserve">
    <value>부모의 정보</value>
  </data>
  <data name="lb12" xml:space="preserve">
    <value>어린이 정보</value>
  </data>
  <data name="lb13" xml:space="preserve">
    <value>목록 아이를 보다.</value>
  </data>
  <data name="lb14" xml:space="preserve">
    <value>수량을 수정</value>
  </data>
  <data name="lb15" xml:space="preserve">
    <value>관계 삭제</value>
  </data>
  <data name="lb16" xml:space="preserve">
    <value>수량</value>
  </data>
  <data name="lb17" xml:space="preserve">
    <value>에코 관계 : 
1. 관계를 삭제하면 새로운 관계를 만들어야함.
2. 부모 부분에서 자녀의 양을 변경함.</value>
  </data>
  <data name="lb18" xml:space="preserve">
    <value>부모 추가</value>
  </data>
  <data name="lb19" xml:space="preserve">
    <value> 어린이 추가</value>
  </data>
  <data name="lb2" xml:space="preserve">
    <value>짧은 키 
+) alt + t =&gt; 정보 업데이트 정보 추가 정보 추가 
+) alt + p =&gt; 업데이트 관계에 부모 추가
+) alt + c =&gt; 업데이트 관계에 아이를 추가
+) alt + l =&gt; Check Child를 확인하십시오</value>
  </data>
  <data name="lb3" xml:space="preserve">
    <value>Key search</value>
  </data>
  <data name="lb4" xml:space="preserve">
    <value>찾다</value>
  </data>
  <data name="lb5" xml:space="preserve">
    <value>부품 추가</value>
  </data>
  <data name="lb6" xml:space="preserve">
    <value>관계 요청을 작성</value>
  </data>
  <data name="lb7" xml:space="preserve">
    <value>부분을 ​​찾</value>
  </data>
  <data name="lb8" xml:space="preserve">
    <value>부품의 정보를 업데이트함</value>
  </data>
  <data name="lb9" xml:space="preserve">
    <value>(버전, 자료, 도면, ...)</value>
  </data>
  <data name="t0" xml:space="preserve">
    <value>주의</value>
  </data>
  <data name="t1" xml:space="preserve">
    <value>수량의 데이터를로드 할 수 없습니다</value>
  </data>
  <data name="t10" xml:space="preserve">
    <value>[삭제 관계] 요청을 성공적으로 했습니다.</value>
  </data>
  <data name="t11" xml:space="preserve">
    <value>오류. 데이터와 연결을 다시 확인하십시오</value>
  </data>
  <data name="t12" xml:space="preserve">
    <value>정보를 업데이트하려면 부품을 선택해야합니다</value>
  </data>
  <data name="t13" xml:space="preserve">
    <value />
  </data>
  <data name="t2" xml:space="preserve">
    <value>키 검색을 입력해야합니다</value>
  </data>
  <data name="t3" xml:space="preserve">
    <value>종료하고 싶습니까?</value>
  </data>
  <data name="t4" xml:space="preserve">
    <value>데이터가 없습니다</value>
  </data>
  <data name="t5" xml:space="preserve">
    <value>부모 부품 데이터가 없습니다</value>
  </data>
  <data name="t6" xml:space="preserve">
    <value>수량 가치가 잘못되었습니다</value>
  </data>
  <data name="t7" xml:space="preserve">
    <value>기존 수량 = 새로운 수량</value>
  </data>
  <data name="t8" xml:space="preserve">
    <value>관계를 삭제 하시겠습니까?</value>
  </data>
  <data name="t9" xml:space="preserve">
    <value>관계를 삭제하면 새로운 관계를 만들어야합니다.</value>
  </data>
</root>