<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAddChild" xml:space="preserve">
    <value>Add &amp;Child</value>
  </data>
  <data name="btnAddParent" xml:space="preserve">
    <value>Add to &amp;Parent</value>
  </data>
  <data name="btnCheck" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="btnClearChild" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="btnDelChild" xml:space="preserve">
    <value>&amp;Delete Child</value>
  </data>
  <data name="btnDeleteParent" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="btnHistory" xml:space="preserve">
    <value>부품을 찾음</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>찾다</value>
  </data>
  <data name="btnUpload" xml:space="preserve">
    <value>요청 만들기 (ECO)</value>
  </data>
  <data name="i.form" xml:space="preserve">
    <value>관계 부분을 함</value>
  </data>
  <data name="lb1" xml:space="preserve">
    <value>찾은 키워드를 입력하십시오</value>
  </data>
  <data name="lb2" xml:space="preserve">
    <value>Part Code</value>
  </data>
  <data name="lb3" xml:space="preserve">
    <value>Part Name</value>
  </data>
  <data name="lb4" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lb5" xml:space="preserve">
    <value>Files Stat</value>
  </data>
  <data name="lb6" xml:space="preserve">
    <value>Double click to open file in list Files</value>
  </data>
  <data name="t0" xml:space="preserve">
    <value>주의</value>
  </data>
  <data name="t1" xml:space="preserve">
    <value>검색 텍스트 상자를 입력해야합니다</value>
  </data>
  <data name="t10" xml:space="preserve">
    <value>오류 :이 파트 코드는 부품 상위 코드와 동일합니다.</value>
  </data>
  <data name="t11" xml:space="preserve">
    <value>이 부분은 List Child에 추가됩니다</value>
  </data>
  <data name="t12" xml:space="preserve">
    <value>부품 추가 : ||</value>
  </data>
  <data name="t13" xml:space="preserve">
    <value>어린이 목록에서</value>
  </data>
  <data name="t14" xml:space="preserve">
    <value>이 행을 삭제 하시겠습니까?</value>
  </data>
  <data name="t15" xml:space="preserve">
    <value>삭제할 행이 없습니다</value>
  </data>
  <data name="t16" xml:space="preserve">
    <value>목록 아이를 지우고 싶습니까?</value>
  </data>
  <data name="t17" xml:space="preserve">
    <value>요청을하기 전에 정보를 확인해야합니다.</value>
  </data>
  <data name="t18" xml:space="preserve">
    <value />
  </data>
  <data name="t19" xml:space="preserve">
    <value />
  </data>
  <data name="t2" xml:space="preserve">
    <value>종료하고 싶습니까?</value>
  </data>
  <data name="t20" xml:space="preserve">
    <value />
  </data>
  <data name="t21" xml:space="preserve">
    <value />
  </data>
  <data name="t22" xml:space="preserve">
    <value />
  </data>
  <data name="t23" xml:space="preserve">
    <value />
  </data>
  <data name="t3" xml:space="preserve">
    <value>일치 데이터를 찾을 수 없습니다</value>
  </data>
  <data name="t4" xml:space="preserve">
    <value>추가 할 데이터가 없습니다</value>
  </data>
  <data name="t5" xml:space="preserve">
    <value>이 부분은 어린이 목록에 있습니다. 다른 부분을 선택하십시오</value>
  </data>
  <data name="t6" xml:space="preserve">
    <value>데이터 서버에 파일이 있습니다.</value>
  </data>
  <data name="t7" xml:space="preserve">
    <value>데이터 서버에서 파일을 찾을 수 없습니다.</value>
  </data>
  <data name="t8" xml:space="preserve">
    <value>이미지를 찾을 수 없습니다</value>
  </data>
  <data name="t9" xml:space="preserve">
    <value>데이터가 없습니다</value>
  </data>
</root>