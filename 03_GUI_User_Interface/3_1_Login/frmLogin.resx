<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zg8pAAAAAElFTkSuQmCC
</value>
  </data>
</root>