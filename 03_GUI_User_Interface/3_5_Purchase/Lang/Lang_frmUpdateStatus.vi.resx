<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="i.form" xml:space="preserve">
    <value>Cập nhật trạng thái PO</value>
  </data>
  <data name="lb1" xml:space="preserve">
    <value>Số PO</value>
  </data>
  <data name="lb10" xml:space="preserve">
    <value>Thêm File</value>
  </data>
  <data name="lb11" xml:space="preserve">
    <value>Xóa File</value>
  </data>
  <data name="lb2" xml:space="preserve">
    <value>Ngày PO</value>
  </data>
  <data name="lb3" xml:space="preserve">
    <value>Trạng thái hiện tại</value>
  </data>
  <data name="lb4" xml:space="preserve">
    <value>Trạng thái cần cập nhật</value>
  </data>
  <data name="lb5" xml:space="preserve">
    <value>Cập nhật</value>
  </data>
  <data name="lb6" xml:space="preserve">
    <value>Hủy bỏ</value>
  </data>
  <data name="lb7" xml:space="preserve">
    <value>Tải file đính kèm</value>
  </data>
  <data name="lb8" xml:space="preserve">
    <value>File đính kèm khi cập nhật</value>
  </data>
  <data name="lb9" xml:space="preserve">
    <value>File đình kèm trong số PO</value>
  </data>
  <data name="t0" xml:space="preserve">
    <value>Thông báo</value>
  </data>
  <data name="t1" xml:space="preserve">
    <value>Chưa chọn trạng thái mới</value>
  </data>
  <data name="t10" xml:space="preserve">
    <value>Chưa có file nào trong danh sách này</value>
  </data>
  <data name="t2" xml:space="preserve">
    <value>Có file đã tồn tại trong folder này</value>
  </data>
  <data name="t3" xml:space="preserve">
    <value>Bạn đang không cập nhật trạng thái mới</value>
  </data>
  <data name="t4" xml:space="preserve">
    <value>Cập nhật Status thành công</value>
  </data>
  <data name="t5" xml:space="preserve">
    <value>Phát sinh lỗi. \n Kiểm tra lại thông tin</value>
  </data>
  <data name="t6" xml:space="preserve">
    <value>Chưa tồn tại folder PO No</value>
  </data>
  <data name="t7" xml:space="preserve">
    <value>Download file thành công</value>
  </data>
  <data name="t8" xml:space="preserve">
    <value>Download file không thành công</value>
  </data>
  <data name="t9" xml:space="preserve">
    <value>Chưa có file nào trong folder này</value>
  </data>
</root>